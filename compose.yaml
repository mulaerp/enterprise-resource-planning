services:
  # Frontend - React Application
  frontend:
    build:
      context: ./mula-erp-frontend
      dockerfile: Dockerfile.frontend.dev
      args:
        VITE_BASE_URL: /
    volumes:
      - ./mula-erp-frontend/dist:/app/dist
    environment:
      - VITE_API_BASE_URL=http://backend:8080
      - VITE_CAS_BASE_URL=https://app.penril.net/pineapple-backend
      - NODE_ENV=production
      - VITE_BASE_URL=/
    networks:
      - mulaerp-network
    restart: unless-stopped


  # Backend - Java Spring Boot Application
  backend:
    build:
      context: ./mula-erp-backend
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DATABASE_URL=jdbc:postgresql://postgres:5432/mulaerp
      - DATABASE_USERNAME=mulaerp
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-mulaerp123}
      - DATABASE_DRIVER=org.postgresql.Driver
      - REDIS_HOST=valkey
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-mulaerp-redis-password}
      - CAS_BASE_URL=https://app.penril.net/pineapple-backend
      - CAS_ADMIN_TOKEN=${CAS_ADMIN_TOKEN:-your-cas-admin-token}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-char-encryption-key-here}
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    networks:
      - mulaerp-network
    restart: unless-stopped
    volumes:
      - ./logs/backend:/app/logs
      - ./config:/app/config:ro

  # PostgreSQL Database (RDS Compatible)
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=mulaerp
      - POSTGRES_USER=mulaerp
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-mulaerp123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    networks:
      - mulaerp-network
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mulaerp -d mulaerp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Valkey (Redis Fork) for Caching and Performance
  valkey:
    image: valkey/valkey:7.2-alpine
    ports:
      - "6379:6379"
    command: >
      valkey-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD:-mulaerp-redis-password}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    networks:
      - mulaerp-network
    restart: unless-stopped
    volumes:
      - ./valkey_data:/data
    environment:
      - VALKEY_PASSWORD=${REDIS_PASSWORD:-mulaerp-redis-password}
    healthcheck:
      test: ["CMD", "valkey-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - ./mula-erp-frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - mulaerp-network
    restart: unless-stopped

  # Database Backup Service
  db-backup:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=mulaerp
      - POSTGRES_USER=mulaerp
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-mulaerp123}
      - PGPASSWORD=${DATABASE_PASSWORD:-mulaerp123}
    volumes:
      - ./postgres_backups:/backups
      - ./backup-scripts:/scripts
    networks:
      - mulaerp-network
    restart: unless-stopped
    command: >
      sh -c "
        while true; do
          echo 'Creating database backup...'
          pg_dump -h postgres -U mulaerp -d mulaerp > /backups/mulaerp_backup_$$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed'
          # Keep only last 7 days of backups
          find /backups -name '*.sql' -mtime +7 -delete
          sleep 86400  # Wait 24 hours
        done
      "

  # Batch Job Runner
  batch-runner:
    build:
      context: ./mula-erp-backend
      dockerfile: Dockerfile.batch
    environment:
      - SPRING_PROFILES_ACTIVE=batch
      - DATABASE_URL=jdbc:postgresql://postgres:5432/mulaerp
      - DATABASE_USERNAME=mulaerp
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-mulaerp123}
      - REDIS_HOST=valkey
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-mulaerp-redis-password}
      - BATCH_SCHEDULE=${BATCH_SCHEDULE:-0 2 * * *}
    depends_on:
      - postgres
      - valkey
      - backend
    networks:
      - mulaerp-network
    restart: unless-stopped
    volumes:
      - ./logs/batch:/app/logs
    command: sh -c "crond -f -d 8 && tail -f /dev/null"

networks:
  mulaerp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

